#summary Description of main features.
#labels Featured

= Features =


The features implemented by Serene 0.5 are:

*{{{http://xml.org/sax/features/namespace-prefixes}}}*

As per {{{javax.xml.validation.ValidatorHandler}}} contract, this feature controls how a {{{ValidatorHandler}}} introduces namespace bindings that were not present in the original SAX event stream. When this feature is set to {{{true}}}, it must make sure that the user's {{{ContentHandler}}} will see the corresponding {{{xmlns}}} attribute in the {{{Attributes}}} object of the {{{ContentHandler.startElement(String,String,String,Attributes)}}} callback. Otherwise, {{{xmlns}}} attributes must not be added to {{{Attributes}}} that's passed to the user-specified {{{ContentHandler}}}. By default it is set to false. See samples for an example.

*{{{http://serenerng.org/features/schemaFactory/replaceMissingDatatypeLibrary}}}*

This is a Serene feature for the {{{javax.xml.validation.SchemaFactory}}} which, when set to {{{true}}}, makes sure that any unrecognized or unsupported datatype library is replaced with the RELAX NG native datatype library and any datatype from that library is replaced with the {{{token}}} datatype. By default it is set to {{{true}}}.

Since {{{javax.xml.validation.SchemaFactory}}} specification requires that a non-null {{{javax.xml.validation.Schema}}} object must be returned every time regardless whether errors occurred or not during parsing, and it is the client's responsibility to make sure the returned schema object is usable, Serene uses the abstract class {{{serene.SereneRecoverableException}}} which extends {{{org.xml.sax.SAXParseException}}} to signal the client when an error was recovered from and the schema object returned is meaningful. In this case the implementing class is {{{serene.datatype.MissingLibraryException}}}. See samples for an example. 